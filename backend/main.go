package main

import (
	"fmt"
	"log"
	"net/http"
	"os"

	"microservice-architecture-builder/backend/controller"
	"microservice-architecture-builder/backend/data"
	"microservice-architecture-builder/backend/server"
	"microservice-architecture-builder/backend/service"

	_ "microservice-architecture-builder/backend/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/joho/godotenv"
)

// @title Microservice Architecture Builder API
// @version 1.0
// @description This is the API documentation for the Microservice Architecture Builder backend.
// @host localhost:8080
// @BasePath /api
func main() {
	// Load .env file
	err := godotenv.Load("./.env")
	if err != nil {
		log.Fatalf("Failed to load environment variables: %v", err)
	}

	// Setup data directory
	dataDir := "./data"
	if err := os.MkdirAll(dataDir, 0755); err != nil {
		log.Fatalf("Failed to create data directory: %v", err)
	}

	// Initialize dependencies
	store := data.NewSupabaseStore()
	boardService := service.NewBoardService(store)
	boardController := controller.NewBoardController(boardService)

	r := server.NewServer(boardController)

	// Start server
	port := ":8080"
	fmt.Printf("Server starting on port %s\n", port)
	log.Fatal(http.ListenAndServe(port, r))
}
