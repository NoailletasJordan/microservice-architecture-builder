package main

import (
	"fmt"
	"log"
	"net/http"
	"os"

	"microservice-architecture-builder/backend/controller"
	"microservice-architecture-builder/backend/data"
	"microservice-architecture-builder/backend/server"
	"microservice-architecture-builder/backend/service"

	_ "microservice-architecture-builder/backend/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title Microservice Architecture Builder API
// @version 1.0
// @description This is the API documentation for the Microservice Architecture Builder backend.
// @host localhost:8080
// @BasePath /api
func main() {
	// Initialize dependencies
	dsn := os.Getenv("POSTGRES_DSN")
	if dsn == "" {
		log.Fatalf("POSTGRES_DSN is not set")
	}
	db, err := server.NewPostgresDB(dsn)
	if err != nil {
		log.Fatalf("Failed to connect to PostgreSQL: %v", err)
	}
	defer db.Close()

	userStore := data.NewUserStore(db)
	userService := service.NewUserService(userStore)
	userController := controller.NewUserController(userService)

	boardStore := data.NewBoardStore(db)
	boardService := service.NewBoardService(boardStore, userService)
	boardController := controller.NewBoardController(boardService)

	r := server.NewServer(boardController, userController, userService)

	// Start server
	port := ":8080"
	fmt.Printf("Server starting on port %s\n", port)
	log.Fatal(http.ListenAndServe(port, r))
}
