{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the Microservice Architecture Builder backend.",
        "title": "Microservice Architecture Builder API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/board/": {
            "get": {
                "description": "Get a list of all boards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Get all boards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Board"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new board. Allowed fields in the request body:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Create a new board",
                "parameters": [
                    {
                        "description": "Board creation payload",
                        "name": "board",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateBoardRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Board"
                        }
                    },
                    "400": {
                        "description": "Bad Request. Example: {\\\"error\\\": \\\"unexpected fields: [foo, bar]\\\"}",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/board/{id}": {
            "get": {
                "description": "Get a board by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Get a board by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Board"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a board by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Delete a board by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a board's details by its unique ID. Allowed fields in the request body:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Update a board by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Board update payload",
                        "name": "board",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UpdateBoardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Board"
                        }
                    },
                    "400": {
                        "description": "Bad Request. Example: {\\\"error\\\": \\\"unexpected fields: [foo, bar]\\\"} or {\\\"error\\\": \\\"at least one of title, data, password is required\\\"}",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/board/{id}/sharefragment": {
            "get": {
                "description": "Get only the share_fragment field for a board by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "boards"
                ],
                "summary": "Get the share fragment of a board by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.BoardShareFragmentResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.BoardShareFragmentResponse": {
            "type": "object",
            "properties": {
                "share_fragment": {
                    "type": "string"
                }
            }
        },
        "controller.CreateBoardRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "{\"nodes\":[],\"edges\":[]}"
                },
                "owner": {
                    "type": "string",
                    "example": "user123"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                },
                "title": {
                    "type": "string",
                    "example": "My Board"
                }
            }
        },
        "controller.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controller.UpdateBoardRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "{\"nodes\":[],\"edges\":[]}"
                },
                "password": {
                    "type": "string",
                    "example": "newsecret"
                },
                "title": {
                    "type": "string",
                    "example": "Updated Board"
                }
            }
        },
        "model.Board": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "share_fragment": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}